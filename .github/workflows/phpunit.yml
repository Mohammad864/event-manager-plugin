name: Run Tests with MySQL

on: 
  push:
    branches: 
      - main
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      mysql:
        image: mysql:latest
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: wordpress_test
          MYSQL_USER: wp_user
          MYSQL_PASSWORD: wp_pass
        ports:
          - 3306:3306
        options: >-
          --health-cmd "mysqladmin ping -h localhost"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install Composer
        run: |
          curl -sS https://getcomposer.org/installer | php
          sudo mv composer.phar /usr/local/bin/composer
          composer install  # Install dependencies

      - name: Install WordPress Tests
        run: |
          curl -O https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar
          chmod +x wp-cli.phar
          sudo mv wp-cli.phar /usr/local/bin/wp

          # Install the WordPress testing framework
          git clone --depth=1 https://github.com/WordPress/wordpress-develop.git /tmp/wordpress-develop
          cd /tmp/wordpress-develop
          git checkout tags/6.6.1  # Replace <valid_tag> with an available tag
          cp -a /path/to/your/bin/install-wp-tests.sh /tmp/wordpress-develop/bin/
          cd /tmp/wordpress-develop/bin
          ./install-wp-tests.sh wordpress_test wp_user wp_pass mysql:3306

      - name: Wait for MySQL to be ready
        run: |
          for i in {30..0}; do
            if mysqladmin ping -h 127.0.0.1 --silent; then
              break
            fi
            echo 'Waiting for MySQL...'
            sleep 1
          done

      - name: Run tests
        env:
          DB_HOST: 127.0.0.1
          DB_USER: wp_user
          DB_PASS: wp_pass
          DB_NAME: wordpress_test
        run: |
          echo "Running tests..."
          vendor/bin/phpunit --log-junit tests/logs/junit.xml

      - name: Upload test results
        if: always()  # Ensure this runs regardless of the previous step's outcome
        uses: actions/upload-artifact@v3  # Use the latest version
        with:
          name: test-results
          path: tests/logs/junit.xml
